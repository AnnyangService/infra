name: 'Terraform Deploy'

on:
  pull_request:
    branches:
      - main
    paths:
      - '**.tf'
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

env:
  AWS_REGION: 'ap-northeast-2'
  TF_VERSION: '1.6.0'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    # OIDC ÌÜ†ÌÅ∞ Í∂åÌïú Î∂ÄÏó¨
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    
    defaults:
      run:
        working-directory: ./

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-session-name: GitHubActions-Terraform
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true

    - name: Comment Plan on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const output = `#### üèóÔ∏è Terraform Plan
          \`\`\`
          ${{ steps.plan.outputs.stdout }}
          \`\`\`
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          });

    - name: Terraform Apply (Manual)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
      run: terraform apply -auto-approve

    - name: Trigger API Server Deployment
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.actions.createWorkflowDispatch({
            owner: 'AnnyangService',
            repo: 'backend',
            workflow_id: 'deploy.yml',
            ref: 'main'
          });

    - name: Trigger AI Server Deployment
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.actions.createWorkflowDispatch({
            owner: 'AnnyangService',
            repo: 'backend_eye',
            workflow_id: 'deploy.yml',
            ref: 'main'
          });

    - name: Terraform Destroy (Manual)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
      run: terraform destroy -auto-approve
